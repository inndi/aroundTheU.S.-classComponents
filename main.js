!function(){"use strict";var e={937:function(e,t,s){e.exports=s.p+"4e8e0a1d604782a0dff8.svg"}},t={};function s(r){var n=t[r];if(void 0!==n)return n.exports;var o=t[r]={exports:{}};return e[r](o,o.exports,s),o.exports}s.p="",function(){var e=s(937);const t=document.querySelector(".page"),r=t.querySelector(".profile"),n=r.querySelector(".profile__name"),o=r.querySelector(".profile__about-me"),i=r.querySelector(".profile__edit-btn"),a=r.querySelector(".profile__add-btn"),l=t.querySelector(".popup_edit"),c=t.querySelector(".popup_add"),h=t.querySelector(".popup_delete"),u=document.querySelector(".profile__photo"),p=document.querySelector(".popup_edit-photo"),_=p.querySelector(".popup__form"),d=document.querySelector(".profile__edit-avatar-btn"),m=h.querySelector(".popup__save-btn"),v=document.querySelector(".popup_card"),k=l.querySelector(".popup__form"),f=l.querySelector(".popup__input_field_name"),C=l.querySelector(".popup__input_field_about-me"),b=c.querySelector(".popup__form"),L=t.querySelector(".cards__list");class E{constructor(e,t){this._formSelector=e.formSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(e.inputSelector)),this._buttonElement=this._formElement.querySelector(e.submitButtonSelector)}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}_setEventListeners(){this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._inputList,this._buttonElement)}))}))}disableButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)}_toggleButtonState(e,t){this._hasInvalidInput(e)?this.disableButton():(t.classList.remove(this._inactiveButtonClass),t.removeAttribute("disabled"))}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_showInputError(e,t){const s=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}resetValidation(){this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((e=>{this._hideInputError(e)}))}}function y(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class g{constructor(e){y(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),y(this,"_handleClickClose",(e=>{e.target.classList.contains("popup_opened")&&this.close(),e.target.classList.contains("popup__close-btn")&&this.close()})),this._popup=e}open(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_opened")}close(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_opened")}setEventListeners(){this._popup.addEventListener("mousedown",this._handleClickClose)}}class S extends g{constructor(e){let{somePopup:t,callBack:s}=e;super(t),this._callBack=s,this._fields=this._popup.querySelectorAll(".popup__input"),this._popupForm=this._popup.querySelector(".popup__form"),this._saveBtn=this._popup.querySelector(".popup__save-btn")}getInputValues(){const e={};return this._fields.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._callBack(this._saveBtn)})),super.setEventListeners()}switchBtnToCreate(){this._saveBtn.textContent="Create"}switchBtnToSave(){this._saveBtn.textContent="Save"}close(){super.close(),this._popupForm.reset()}}class B{constructor(e){let{cardData:t,cardTemplate:s,handleCardClick:r,handleBinClick:n,handleLikeClick:o}=e;var i,a;a=()=>{this._element.remove()},(i="_handleDeleteButton")in this?Object.defineProperty(this,i,{value:a,enumerable:!0,configurable:!0,writable:!0}):this[i]=a,this._name=t.name,this._link=t.link,this._handleCardClick=r,this._cardTemplate=s,this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".card__img"),this._cardTitle=this._element.querySelector(".card__title"),this._likeButton=this._element.querySelector(".card__like-btn"),this._likesAmount=this._element.querySelector(".card__likes-amount"),this._deleteButton=this._element.querySelector(".card__delete-btn"),this._handleBinClick=n,this._handleLikeClick=o,this._mineCard=t.isMine,this._myNewCard=t.myNewCard,this._cardLikes=t.likes,this._initialLikes=t.likes.length}_getTemplate(){return document.querySelector(this._cardTemplate).content.querySelector(".card").cloneNode(!0)}createCard(){return this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this._addDeleteButtonToNewCard(),this._handleLikeInitAmount(),this._element}_setEventListeners(){this._likeButton.addEventListener("click",this._handleLikeClick),this._deleteButton.addEventListener("click",this._handleBinClick),this._cardImage.addEventListener("mousedown",this._handleCardClick)}addLike(e){this._likeButton.classList.add("card__like-btn_active"),this._likesAmount.textContent=e.length,this._cardLikes=e}removeLike(e){this._likeButton.classList.remove("card__like-btn_active"),this._likesAmount.textContent=e.length,this._cardLikes=e}toggleLike(e){return this._cardLikes.some((t=>t._id===e))}_handleLikeInitAmount(){this._likesAmount.textContent=this._initialLikes}_addDeleteButtonToNewCard(){this._myNewCard&&this._deleteButton.classList.add("card__delete-btn_active")}addDeleteButton(){this._mineCard&&this._deleteButton.classList.add("card__delete-btn_active")}myLike(e){this._cardLikes.forEach((t=>{t._id===e&&this._likeButton.classList.add("card__like-btn_active")}))}}document.getElementById("header-logo").src=e;const q=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log(e)}))}getMyProfile(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log(e)}))}delete(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log(e)}))}postNewCardData(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log(e)}))}patchProfileData(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.profileName,about:e.profileAbout})}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log(e)}))}patchAvatar(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.value})}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log(e)}))}removeLike(e){return fetch("https://around.nomoreparties.co/v1/group-12/cards/likes/".concat(e),{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log(e)}))}addLike(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log(e)}))}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"2f92e6f8-d3bf-4f0b-b7c9-ecb844a65d7b","Content-Type":"application/json"}}),w={};var I;I={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-btn",inactiveButtonClass:"popup__save-btn_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"},Array.from(document.querySelectorAll(I.formSelector)).forEach((e=>{const t=new E(I,e),s=e.getAttribute("name");w[s]=t,t.enableValidation()}));const P=new class extends g{constructor(e){var t,s;super(e),s=e=>{this._popupCardImage.src=e.target.src,this._popupCardImage.alt=e.target.alt,this._popupCardTitle.textContent=e.target.alt,super.open()},(t="open")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this.open=s,this._popupCardImage=this._popup.querySelector(".popup__card-img"),this._popupCardTitle=this._popup.querySelector(".popup__card-title")}}(v);P.setEventListeners();const x=new g(h);x.setEventListeners();const T=new class extends g{constructor(e){let{somePopup:t,callBack:s}=e;super(t),this._callBack=s,this._field=this._popup.querySelector(".popup__input"),this._popupForm=this._popup.querySelector(".popup__form"),this._saveBtn=this._popup.querySelector(".popup__save-btn")}setEventListeners(){this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._callBack(this._field,this._saveBtn)})),super.setEventListeners()}switchBtnToSave(){this._saveBtn.textContent="Save"}close(){super.close(),this._popupForm.reset()}}({somePopup:p,callBack:(e,t)=>{t.textContent="Saving...",q.patchAvatar(e).then((()=>{u.src=e.value,T.close()}))}});function A(e){const t=new B({cardData:e,cardTemplate:"#card-template",handleCardClick:e=>{P.open(e)},handleBinClick:()=>{x.open(),m.onclick=()=>{q.delete(e._id).then((()=>{t._handleDeleteButton(),x.close()}))}},handleLikeClick:()=>{q.getMyProfile().then((s=>{t.toggleLike(s._id)?q.removeLike(e._id).then((e=>{t.removeLike(e.likes)})):q.addLike(e._id).then((e=>{t.addLike(e.likes)}))}))}});return q.getMyProfile().then((e=>{t.myLike(e._id)})),t.addDeleteButton(),t.createCard()}T.setEventListeners();const j=new class{constructor(e,t){let{renderer:s}=e;this.renderer=s,this._container=t}_clear(){this._container.innerHTML=""}addPrependItem(e){this._container.prepend(e)}addAppendItem(e){this._container.append(e)}}({renderer:e=>{if(e.myNewCard){const t=A(e);j.addPrependItem(t)}else{const t=A(e);j.addAppendItem(t)}}},L),D=new class{constructor(e,t){this._name=e,this._about=t}getUserInfo(){const e={};return e.name=this._name.textContent,e.about=this._about.textContent,e}setUserInfo(e){this._name.textContent=e.profileName,this._about.textContent=e.profileAbout}}(n,o),N=new S({somePopup:l,callBack:e=>{e.textContent="Saving...";const t=N.getInputValues();D.setUserInfo(t),q.patchProfileData(t).then((()=>{N.close()}))}});N.setEventListeners();const U=new S({somePopup:c,callBack:e=>{e.textContent="Creating...";const t=U.getInputValues(),s={};s.name=t.placeTitle,s.link=t.placeLink,q.postNewCardData(s).then((e=>{e.myNewCard=!0,j.renderer(e),U.close()}))}});U.setEventListeners(),i.addEventListener("click",(()=>{const e=D.getUserInfo();f.value=e.name,C.value=e.about,w[k.getAttribute("name")].resetValidation(),N.switchBtnToSave(),N.open()})),a.addEventListener("click",(()=>{w[b.getAttribute("name")].resetValidation(),U.switchBtnToCreate(),U.open()})),d.addEventListener("click",(()=>{w[_.getAttribute("name")].resetValidation(),T.switchBtnToSave(),T.open()})),(async()=>{await q.getMyProfile().then((e=>{u.src=e.avatar,n.textContent=e.name,o.textContent=e.about,q.getInitialCards().then((t=>{t.forEach((t=>{t.owner._id===e._id&&(t.isMine=!0),j.renderer(t)}))}))}))})()}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,