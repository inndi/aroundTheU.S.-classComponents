!function(){"use strict";var e={937:function(e,t,s){e.exports=s.p+"4e8e0a1d604782a0dff8.svg"},217:function(e,t,s){e.exports=s.p+"19534a52910e014ed41a.jpg"}},t={};function s(n){var r=t[n];if(void 0!==r)return r.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,s),o.exports}s.p="",function(){var e=s(217),t=s(937);const n=document.querySelector(".page"),r=n.querySelector(".profile"),o=r.querySelector(".profile__name"),i=r.querySelector(".profile__about-me"),a=r.querySelector(".profile__edit-btn"),l=r.querySelector(".profile__add-btn"),c=n.querySelector(".popup_edit"),p=n.querySelector(".popup_add"),u=document.querySelector(".popup_card"),_=c.querySelector(".popup__form"),d=c.querySelector(".popup__input_field_name"),h=c.querySelector(".popup__input_field_about-me"),m=p.querySelector(".popup__form"),v=n.querySelector(".cards__list");class b{constructor(e,t){this._formSelector=e.formSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(e.inputSelector)),this._buttonElement=this._formElement.querySelector(e.submitButtonSelector)}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}_setEventListeners(){this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._inputList,this._buttonElement)}))}))}disableButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)}_toggleButtonState(e,t){this._hasInvalidInput(e)?this.disableButton():(t.classList.remove(this._inactiveButtonClass),t.removeAttribute("disabled"))}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_showInputError(e,t){const s=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}resetValidation(){this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((e=>{this._hideInputError(e)}))}}function f(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class E{constructor(e){f(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),f(this,"_handleClickClose",(e=>{e.target.classList.contains("popup_opened")&&this.close(),e.target.classList.contains("popup__close-btn")&&this.close()})),this._popup=e}open(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_opened")}close(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_opened")}setEventListeners(){this._popup.addEventListener("mousedown",this._handleClickClose)}}class g extends E{constructor(e){let{somePopup:t,callBack:s}=e;super(t),this._callBack=s,this._fields=this._popup.querySelectorAll(".popup__input"),this._popupForm=this._popup.querySelector(".popup__form")}getInputValues(){const e={};return this._fields.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._callBack()})),super.setEventListeners()}close(){super.close(),this._popupForm.reset()}}function y(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class L{constructor(e){let{cardData:t,cardTemplate:s,handleCardClick:n}=e;y(this,"_handleLikeButton",(e=>{e.target.classList.toggle("card__like-btn_active")})),y(this,"_handleDeleteButton",(()=>{this._element.remove(),this._element=null})),this._name=t.name,this._link=t.link,this._handleCardClick=n,this._cardTemplate=s,this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".card__img"),this._cardTitle=this._element.querySelector(".card__title"),this._likeButton=this._element.querySelector(".card__like-btn"),this._deleteButton=this._element.querySelector(".card__delete-btn")}_getTemplate(){return document.querySelector(this._cardTemplate).content.querySelector(".card").cloneNode(!0)}createCard(){return this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this._element}_setEventListeners(){this._likeButton.addEventListener("click",this._handleLikeButton),this._deleteButton.addEventListener("click",this._handleDeleteButton),this._cardImage.addEventListener("mousedown",this._handleCardClick)}}document.getElementById("profile-photo").src=e,document.getElementById("header-logo").src=t;const C={};var S;S={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-btn",inactiveButtonClass:"popup__save-btn_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"},Array.from(document.querySelectorAll(S.formSelector)).forEach((e=>{const t=new b(S,e),s=e.getAttribute("name");C[s]=t,t.enableValidation()}));const k=new class extends E{constructor(e){var t,s;super(e),s=e=>{this._popupCardImage.src=e.target.src,this._popupCardImage.alt=e.target.alt,this._popupCardTitle.textContent=e.target.alt,super.open()},(t="open")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this.open=s,this._popupCardImage=this._popup.querySelector(".popup__card-img"),this._popupCardTitle=this._popup.querySelector(".popup__card-title")}}(u);k.setEventListeners();const I=new class{constructor(e,t){let{items:s,renderer:n}=e;this._renderedItems=s,this.renderer=n,this._container=t}_clear(){this._container.innerHTML=""}renderItems(){this._clear(),this._renderedItems.forEach((e=>{this.renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>{const t=function(e){return new L({cardData:e,cardTemplate:"#card-template",handleCardClick:e=>{k.open(e)}}).createCard()}(e);I.addItem(t)}},v),B=new class{constructor(e,t){this._name=e,this._about=t}getUserInfo(){const e={};return e.name=this._name.textContent,e.about=this._about.textContent,e}setUserInfo(e){this._name.textContent=e.profileName,this._about.textContent=e.profileAbout}}(o,i);I.renderItems();const q=new g({somePopup:c,callBack:()=>{const e=q.getInputValues();B.setUserInfo(e),q.close()}});q.setEventListeners();const w=new g({somePopup:p,callBack:()=>{const e=w.getInputValues(),t={};t.name=e.placeTitle,t.link=e.placeLink,I.renderer(t),w.close()}});w.setEventListeners(),a.addEventListener("click",(()=>{const e=B.getUserInfo();d.value=e.name,h.value=e.about,C[_.getAttribute("name")].resetValidation(),q.open()})),l.addEventListener("click",(()=>{C[m.getAttribute("name")].resetValidation(),w.open()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,