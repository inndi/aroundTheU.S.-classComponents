!function(){"use strict";var e={937:function(e,t,s){e.exports=s.p+"4e8e0a1d604782a0dff8.svg"}},t={};function s(i){var n=t[i];if(void 0!==n)return n.exports;var r=t[i]={exports:{}};return e[i](r,r.exports,s),r.exports}s.p="",function(){var e=s(937);const t=document.querySelector(".page"),i=t.querySelector(".profile"),n=i.querySelector(".profile__name"),r=i.querySelector(".profile__about-me"),o=i.querySelector(".profile__edit-btn"),a=i.querySelector(".profile__add-btn"),l=t.querySelector(".popup_edit"),c=t.querySelector(".popup_add"),d=t.querySelector(".popup_delete"),p=document.querySelector(".profile__photo"),u=document.querySelector(".popup_edit-photo"),_=u.querySelector(".popup__form"),h=document.querySelector(".profile__edit-avatar-btn"),m=d.querySelector(".popup__save-btn"),k=document.querySelector(".popup_card"),f=(u.querySelector(".popup__input_field_link"),l.querySelector(".popup__form")),v=l.querySelector(".popup__input_field_name"),L=l.querySelector(".popup__input_field_about-me"),b=c.querySelector(".popup__form"),C=(c.querySelector(".popup__input_field_title"),c.querySelector(".popup__input_field_link"),t.querySelector(".cards__list"));class y{constructor(e,t){this._formSelector=e.formSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(e.inputSelector)),this._buttonElement=this._formElement.querySelector(e.submitButtonSelector)}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}_setEventListeners(){this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._inputList,this._buttonElement)}))}))}disableButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)}_toggleButtonState(e,t){this._hasInvalidInput(e)?this.disableButton():(t.classList.remove(this._inactiveButtonClass),t.removeAttribute("disabled"))}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_showInputError(e,t){const s=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}resetValidation(){this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((e=>{this._hideInputError(e)}))}}function E(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class g{constructor(e){E(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),E(this,"_handleClickClose",(e=>{e.target.classList.contains("popup_opened")&&this.close(),e.target.classList.contains("popup__close-btn")&&this.close()})),this._popup=e}open(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_opened")}close(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_opened")}setEventListeners(){this._popup.addEventListener("mousedown",this._handleClickClose)}}class S extends g{constructor(e){let{somePopup:t,callBack:s}=e;super(t),this._callBack=s,this._fields=this._popup.querySelectorAll(".popup__input"),this._popupForm=this._popup.querySelector(".popup__form"),this._saveBtn=this._popup.querySelector(".popup__save-btn"),this._saveButtonText=this._saveBtn.textContent}getInputValues(){const e={};return this._fields.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._callBack()})),super.setEventListeners()}renderLoading(e,t){this._saveBtn.textContent=e?t:this._saveButtonText}close(){super.close(),this._popupForm.reset()}}class I{constructor(e,t){this._userName=e.name,this._userAbout=e.about,this._userAvatar=e.avatar,this._fieldName=t.name,this._fieldInfo=t.info,this._photoContainer=t.avatar,this._popupFieldName=t.popupFieldName,this._popupFieldInfo=t.popupFieldInfo}getUserInfo(){const e={};return e.name=this._userName,e.about=this._userAbout,e}setUserInfo(){this._photoContainer.src=this._userAvatar,this._fieldName.textContent=this._userName,this._fieldInfo.textContent=this._userAbout,this._popupFieldName.value=this._userName,this._popupFieldInfo.value=this._userAbout}}class B{constructor(e){let{cardData:t,userId:s,cardTemplate:i,handleCardClick:n,handleBinClick:r,handleLikeClick:o}=e;var a,l;l=()=>{this._element.remove()},(a="handleDeleteButton")in this?Object.defineProperty(this,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):this[a]=l,this._name=t.name,this._link=t.link,this._handleCardClick=n,this._cardTemplate=i,this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".card__img"),this._cardTitle=this._element.querySelector(".card__title"),this._likeButton=this._element.querySelector(".card__like-btn"),this._likesAmount=this._element.querySelector(".card__likes-amount"),this._deleteButton=this._element.querySelector(".card__delete-btn"),this._handleBinClick=r,this._handleLikeClick=o,this._mineCard=t.isMine,this._myNewCard=t.myNewCard,this._cardLikes=t.likes,this._initialLikes=t.likes.length,this._userId=s}_getTemplate(){return document.querySelector(this._cardTemplate).content.querySelector(".card").cloneNode(!0)}createCard(){return this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this._handleLikeInitAmount(),this._addDeleteButton(),this._checkLikes(),this._element}_setEventListeners(){this._likeButton.addEventListener("click",this._handleLikeClick),this._deleteButton.addEventListener("click",this._handleBinClick),this._cardImage.addEventListener("mousedown",this._handleCardClick)}_updateLikes(e){this._likesAmount.textContent=e.length,this._cardLikes=e}addLike(e){this._likeButton.classList.add("card__like-btn_active"),this._updateLikes(e)}removeLike(e){this._likeButton.classList.remove("card__like-btn_active"),this._updateLikes(e)}isLiked(){return this._cardLikes.some((e=>e._id===this._userId))}_handleLikeInitAmount(){this._likesAmount.textContent=this._initialLikes}_addDeleteButton(){(this._mineCard||this._myNewCard)&&this._deleteButton.classList.add("card__delete-btn_active")}_checkLikes(){this._cardLikes.forEach((e=>{e._id===this._userId&&this._likeButton.classList.add("card__like-btn_active")}))}}document.getElementById("header-logo").src=e;const q={};q.name=n,q.info=r,q.avatar=p,q.popupFieldName=v,q.popupFieldInfo=L;const w=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._checkResponse)}getMyProfile(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._checkResponse)}delete(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}postNewCardData(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}patchProfileData(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.profileName,about:e.profileAbout})}).then(this._checkResponse)}patchAvatar(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatarLink})}).then(this._checkResponse)}removeLike(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}addLike(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"2f92e6f8-d3bf-4f0b-b7c9-ecb844a65d7b","Content-Type":"application/json"}}),A={};var x;x={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-btn",inactiveButtonClass:"popup__save-btn_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"},Array.from(document.querySelectorAll(x.formSelector)).forEach((e=>{const t=new y(x,e),s=e.getAttribute("name");A[s]=t,t.enableValidation()}));const N=new class extends g{constructor(e){super(e),this._popupCardImage=this._popup.querySelector(".popup__card-img"),this._popupCardTitle=this._popup.querySelector(".popup__card-title")}open(e){this._popupCardImage.src=e.link,this._popupCardImage.alt=e.name,this._popupCardTitle.textContent=e.name,super.open()}}(k);N.setEventListeners();const T=new class extends g{constructor(e){super(e)}}(d);function P(e,t){const s=new B({cardData:e,userId:t,cardTemplate:"#card-template",handleCardClick:()=>{N.open(e)},handleBinClick:()=>{T.open();const t=()=>w.delete(e._id).then((()=>{s.handleDeleteButton(),T.close(),m.removeEventListener("click",t)})).catch((e=>{console.log(e)}));m.addEventListener("click",t)},handleLikeClick:()=>{s.isLiked()?w.removeLike(e._id).then((e=>{s.removeLike(e.likes)})).catch((e=>{console.log(e)})):w.addLike(e._id).then((e=>{s.addLike(e.likes)})).catch((e=>{console.log(e)}))}});return s.createCard()}T.setEventListeners();const U=new class{constructor(e,t){let{renderer:s}=e;this.renderer=s,this._container=t}_clear(){this._container.innerHTML=""}addPrependItem(e){this._container.prepend(e)}addAppendItem(e){this._container.append(e)}}({renderer:(e,t)=>{if(e.myNewCard){const s=P(e,t);U.addPrependItem(s)}else{const s=P(e,t);U.addAppendItem(s)}}},C),D=new S({somePopup:u,callBack:()=>{D.renderLoading(!0,"Saving...");const e=D.getInputValues();w.patchAvatar(e).then((e=>{p.src=e.avatar,D.close()})).catch((e=>{console.log(e)})).finally((function(){D.renderLoading(!1)}))}});D.setEventListeners();const F=new S({somePopup:l,callBack:()=>{F.renderLoading(!0,"Saving...");const e=F.getInputValues();w.patchProfileData(e).then((e=>{q.name.textContent=e.name,q.info.textContent=e.about,F.close(),q.popupFieldName.value=e.name,q.popupFieldInfo.value=e.about})).catch((e=>{console.log(e)})).finally((function(){F.renderLoading(!1)}))}});F.setEventListeners();const V=new S({somePopup:c,callBack:()=>{V.renderLoading(!0,"Creating...");const e=V.getInputValues(),t={};t.name=e.placeTitle,t.link=e.placeLink,w.postNewCardData(t).then((e=>{e.myNewCard=!0,U.renderer(e,e.owner._id),V.close()})).catch((e=>{console.log(e)})).finally((function(){V.renderLoading(!1)}))}});V.setEventListeners(),a.addEventListener("click",(()=>{A[b.getAttribute("name")].resetValidation(),V.open()})),h.addEventListener("click",(()=>{A[_.getAttribute("name")].resetValidation(),D.open()})),o.addEventListener("click",(()=>{A[f.getAttribute("name")].resetValidation(),q.popupFieldName.value=q.name.textContent,q.popupFieldInfo.value=q.info.textContent,F.open()})),(async()=>{const e=await w.getMyProfile();new I(e,q).setUserInfo(),(await w.getInitialCards()).forEach((t=>{t.owner._id===e._id&&(t.isMine=!0),U.renderer(t,e._id)}))})()}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SSxFQUFpQm5JLGVBQWMsRUFBTSxlQUVyQyxNQUFNb0ksRUFBWUQsRUFBaUJ4SSxpQkFDN0IwSSxFQUFVLEdBQ2hCQSxFQUFRdkksS0FBT3NJLEVBQVVFLFdBQ3pCRCxFQUFRbkcsS0FBT2tHLEVBQVVHLFVBRXpCbEUsRUFBSW9CLGdCQUFnQjRDLEdBQ2pCakQsTUFBTU0sSUFDTEEsRUFBSzFDLFdBQVksRUFFakJvRSxFQUFhRSxTQUFTNUIsRUFBTUEsRUFBSzhDLE1BQU10RSxLQUN2Q2lFLEVBQWlCekosV0FFbEJzSSxPQUFPQyxJQUNOQyxRQUFRQyxJQUFJRixNQUViZ0IsU0FBUSxXQUNQRSxFQUFpQm5JLGVBQWMsU0FJdkNtSSxFQUFpQmxKLG9CQUVqQjNFLEVBQVVxQyxpQkFBaUIsU0FBUyxLQUNsQ3lKLEVBQWVqTCxFQUFhcUwsYUFBYSxTQUFTbEksa0JBRWxENkosRUFBaUJySixVQUduQmpFLEVBQWM4QixpQkFBaUIsU0FBUyxLQUN0Q3lKLEVBQWV4TCxFQUFpQjRMLGFBQWEsU0FBU2xJLGtCQUV0RHlKLEVBQXdCakosVUFHMUJ6RSxFQUFXc0MsaUJBQWlCLFNBQVMsS0FDbkN5SixFQUFlcEwsRUFBY3dMLGFBQWEsU0FBU2xJLGtCQUVuRGdDLEVBQWVXLGVBQWVsQixNQUFRTyxFQUFlUixLQUFLekIsWUFDMURpQyxFQUFlYSxlQUFlcEIsTUFBUU8sRUFBZVEsS0FBS3pDLFlBQzFENkosRUFBa0JwSixVQUdKMkosV0FDZCxNQUFNcEksUUFBYWdFLEVBQUlnQixlQUVFLElBQUlqRixFQUFTQyxFQUFNQyxHQUMzQmdCLHFCQUVHK0MsRUFBSWEsbUJBRWxCbEksU0FBUzBJLElBQ1RBLEVBQUs4QyxNQUFNdEUsTUFBUTdELEVBQUs2RCxNQUMxQndCLEVBQUs1QyxRQUFTLEdBRWhCc0UsRUFBYUUsU0FBUzVCLEVBQU1yRixFQUFLNkQsU0FJckN3RSxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80L3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2VzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0NvbmZpcm1hdGlvblBvcHVwLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1NlY3Rpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIl9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7IiwiY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wYWdlJyk7XG5cbmNvbnN0IHByb2ZpbGUgPSBib2R5LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlJyk7XG5jb25zdCBwcm9maWxlTmFtZSA9IHByb2ZpbGUucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX25hbWUnKTtcbmNvbnN0IHByb2ZpbGVJbmZvID0gcHJvZmlsZS5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWJvdXQtbWUnKTtcbmNvbnN0IGVkaXRCdXR0b24gPSBwcm9maWxlLnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19lZGl0LWJ0bicpO1xuY29uc3QgYWRkQnV0dG9uID0gcHJvZmlsZS5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWRkLWJ0bicpO1xuXG5jb25zdCBwb3B1cEVkaXQgPSBib2R5LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9lZGl0Jyk7XG5jb25zdCBwb3B1cEFkZCA9IGJvZHkucXVlcnlTZWxlY3RvcignLnBvcHVwX2FkZCcpO1xuY29uc3QgcG9wdXBEZWxldGUgPSBib2R5LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9kZWxldGUnKTtcblxuY29uc3QgcGhvdG9Db250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fcGhvdG8nKTtcbmNvbnN0IHBvcHVwRWRpdEF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9lZGl0LXBob3RvJyk7XG5jb25zdCBwb3B1cEVkaXRBdmFGb3JtID0gcG9wdXBFZGl0QXZhdGFyLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybScpO1xuY29uc3QgZWRpdEF2YXRhckJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19lZGl0LWF2YXRhci1idG4nKTtcblxuY29uc3QgcG9wdXBEZWxldGVZZXNCdXR0b24gPSBwb3B1cERlbGV0ZS5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3NhdmUtYnRuJyk7XG5cbmNvbnN0IHBvcHVwQ2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9jYXJkJyk7XG5cbmNvbnN0IHBvcHVwQXZhdGFyTGluayA9IHBvcHVwRWRpdEF2YXRhci5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X2ZpZWxkX2xpbmsnKTtcblxuY29uc3QgcG9wdXBFZGl0Rm9ybSA9IHBvcHVwRWRpdC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcbmNvbnN0IGZpZWxkTmFtZSA9IHBvcHVwRWRpdC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X2ZpZWxkX25hbWUnKTtcbmNvbnN0IGZpZWxkQWJvdXRNZSA9IHBvcHVwRWRpdC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X2ZpZWxkX2Fib3V0LW1lJyk7XG5cbmNvbnN0IHBvcHVwQWRkRm9ybSA9IHBvcHVwQWRkLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybScpO1xuY29uc3QgcG9wdXBBZGRUaXRsZSA9IHBvcHVwQWRkLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfZmllbGRfdGl0bGUnKTtcbmNvbnN0IHBvcHVwQWRkTGluayA9IHBvcHVwQWRkLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfZmllbGRfbGluaycpO1xuXG5jb25zdCBjYXJkc0xpc3QgPSBib2R5LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkc19fbGlzdCcpO1xuXG5jb25zdCB2YWxpZGF0aW9uQ29uZmlnID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLnBvcHVwX19mb3JtXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLnBvcHVwX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIucG9wdXBfX3NhdmUtYnRuXCIsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXBfX3NhdmUtYnRuX2Rpc2FibGVkXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJwb3B1cF9faW5wdXRfdHlwZV9lcnJvclwiLFxuICBlcnJvckNsYXNzOiBcInBvcHVwX19pbnB1dC1lcnJvcl9hY3RpdmVcIixcbn07XG5cbmV4cG9ydCB7XG4gIHByb2ZpbGVOYW1lLFxuICBwcm9maWxlSW5mbyxcbiAgZWRpdEJ1dHRvbixcbiAgYWRkQnV0dG9uLFxuICBwb3B1cEVkaXQsXG4gIHBvcHVwQWRkLFxuICBwb3B1cENhcmQsXG4gIHBvcHVwRWRpdEZvcm0sXG4gIGZpZWxkTmFtZSxcbiAgZmllbGRBYm91dE1lLFxuICBwb3B1cEFkZEZvcm0sXG4gIGNhcmRzTGlzdCxcbiAgdmFsaWRhdGlvbkNvbmZpZyxcbiAgcG9wdXBEZWxldGUsXG4gIHBvcHVwRGVsZXRlWWVzQnV0dG9uLFxuICBwaG90b0NvbnRhaW5lcixcbiAgcG9wdXBFZGl0QXZhdGFyLFxuICBlZGl0QXZhdGFyQnRuLFxuICBwb3B1cEVkaXRBdmFGb3JtLFxuICBwb3B1cEFkZFRpdGxlLFxuICBwb3B1cEFkZExpbmssXG4gIHBvcHVwQXZhdGFyTGlua1xufTsiLCJcbmV4cG9ydCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3Ioc2VsZWN0b3JzLCBmb3JtRWxlbWVudCkge1xuICAgIHRoaXMuX2Zvcm1TZWxlY3RvciA9IHNlbGVjdG9ycy5mb3JtU2VsZWN0b3I7XG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHNlbGVjdG9ycy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IHNlbGVjdG9ycy5pbnB1dEVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IHNlbGVjdG9ycy5lcnJvckNsYXNzO1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9ycy5pbnB1dFNlbGVjdG9yKSk7XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcbiAgfVxuXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4geyBldnQucHJldmVudERlZmF1bHQoKSB9KTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9O1xuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSh0aGlzLl9pbnB1dExpc3QsIHRoaXMuX2J1dHRvbkVsZW1lbnQpO1xuXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUodGhpcy5faW5wdXRMaXN0LCB0aGlzLl9idXR0b25FbGVtZW50KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIGRpc2FibGVCdXR0b24oKSB7XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsIHRydWUpO1xuICB9XG5cbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCkge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSkge1xuICAgICAgdGhpcy5kaXNhYmxlQnV0dG9uKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIGJ1dHRvbkVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICAgIH07XG4gIH07XG5cbiAgX2hhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpIHtcbiAgICByZXR1cm4gaW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgfSk7XG4gIH07XG5cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcbiAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xuICAgIH07XG4gIH07XG5cbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgZXJyb3JNZXNzYWdlKSB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICB9O1xuXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcbiAgfTtcblxuICByZXNldFZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUodGhpcy5faW5wdXRMaXN0LCB0aGlzLl9idXR0b25FbGVtZW50KTtcblxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfSk7XG4gIH07XG59XG4iLCJleHBvcnQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihzb21lUG9wdXApIHtcbiAgICB0aGlzLl9wb3B1cCA9IHNvbWVQb3B1cDtcbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfb3BlbmVkJyk7XG4gIH1cblxuICBfaGFuZGxlRXNjQ2xvc2UgPSAoZXZ0KSA9PiB7XG4gICAgaWYgKGV2dC5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfTtcbiAgfVxuXG4gIF9oYW5kbGVDbGlja0Nsb3NlID0gKGV2dCkgPT4ge1xuICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXBfb3BlbmVkJykpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9O1xuICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXBfX2Nsb3NlLWJ0bicpKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfTtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMuX2hhbmRsZUNsaWNrQ2xvc2UpO1xuICB9XG59IiwiaW1wb3J0IHsgUG9wdXAgfSBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IoeyBzb21lUG9wdXAsIGNhbGxCYWNrIH0pIHtcbiAgICBzdXBlcihzb21lUG9wdXApO1xuICAgIHRoaXMuX2NhbGxCYWNrID0gY2FsbEJhY2s7XG4gICAgdGhpcy5fZmllbGRzID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvckFsbCgnLnBvcHVwX19pbnB1dCcpO1xuICAgIHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybScpO1xuICAgIHRoaXMuX3NhdmVCdG4gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3NhdmUtYnRuJyk7XG4gICAgdGhpcy5fc2F2ZUJ1dHRvblRleHQgPSB0aGlzLl9zYXZlQnRuLnRleHRDb250ZW50O1xuICB9XG4gIGdldElucHV0VmFsdWVzKCkge1xuICAgIGNvbnN0IGZpZWxkc0xpc3QgPSB7fTtcblxuICAgIHRoaXMuX2ZpZWxkcy5mb3JFYWNoKChmaWVsZCkgPT4ge1xuICAgICAgZmllbGRzTGlzdFtmaWVsZC5uYW1lXSA9IGZpZWxkLnZhbHVlO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGZpZWxkc0xpc3Q7XG4gIH1cblxuXG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9jYWxsQmFjaygpO1xuICAgIH0pO1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICByZW5kZXJMb2FkaW5nKGlzTG9hZGluZywgbG9hZGluZ1RleHQpIHtcbiAgICBpZiAoaXNMb2FkaW5nKSB7XG4gICAgICB0aGlzLl9zYXZlQnRuLnRleHRDb250ZW50ID0gbG9hZGluZ1RleHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3NhdmVCdG4udGV4dENvbnRlbnQgPSB0aGlzLl9zYXZlQnV0dG9uVGV4dDtcbiAgICB9XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX3BvcHVwRm9ybS5yZXNldCgpO1xuICB9XG59XG4iLCJcbmV4cG9ydCBjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKHVzZXIsIHVzZXJEYXRhRmllbGRzKSB7XG4gICAgdGhpcy5fdXNlck5hbWUgPSB1c2VyLm5hbWU7XG4gICAgdGhpcy5fdXNlckFib3V0ID0gdXNlci5hYm91dDtcbiAgICB0aGlzLl91c2VyQXZhdGFyID0gdXNlci5hdmF0YXI7XG4gICAgdGhpcy5fZmllbGROYW1lID0gdXNlckRhdGFGaWVsZHMubmFtZTtcbiAgICB0aGlzLl9maWVsZEluZm8gPSB1c2VyRGF0YUZpZWxkcy5pbmZvO1xuICAgIHRoaXMuX3Bob3RvQ29udGFpbmVyID0gdXNlckRhdGFGaWVsZHMuYXZhdGFyO1xuICAgIHRoaXMuX3BvcHVwRmllbGROYW1lID0gdXNlckRhdGFGaWVsZHMucG9wdXBGaWVsZE5hbWU7XG4gICAgdGhpcy5fcG9wdXBGaWVsZEluZm8gPSB1c2VyRGF0YUZpZWxkcy5wb3B1cEZpZWxkSW5mbztcbiAgfVxuICBnZXRVc2VySW5mbygpIHtcbiAgICBjb25zdCB1c2VySW5mb0xpc3QgPSB7fTtcbiAgICB1c2VySW5mb0xpc3QubmFtZSA9IHRoaXMuX3VzZXJOYW1lO1xuICAgIHVzZXJJbmZvTGlzdC5hYm91dCA9IHRoaXMuX3VzZXJBYm91dDtcbiAgICByZXR1cm4gdXNlckluZm9MaXN0O1xuICB9XG4gIHNldFVzZXJJbmZvKCkge1xuICAgIHRoaXMuX3Bob3RvQ29udGFpbmVyLnNyYyA9IHRoaXMuX3VzZXJBdmF0YXI7XG4gICAgdGhpcy5fZmllbGROYW1lLnRleHRDb250ZW50ID0gdGhpcy5fdXNlck5hbWU7XG4gICAgdGhpcy5fZmllbGRJbmZvLnRleHRDb250ZW50ID0gdGhpcy5fdXNlckFib3V0O1xuICAgIHRoaXMuX3BvcHVwRmllbGROYW1lLnZhbHVlID0gdGhpcy5fdXNlck5hbWU7XG4gICAgdGhpcy5fcG9wdXBGaWVsZEluZm8udmFsdWUgPSB0aGlzLl91c2VyQWJvdXQ7XG4gIH1cbn0iLCJleHBvcnQgY2xhc3MgQ2FyZCB7XG5cbiAgY29uc3RydWN0b3IoeyBjYXJkRGF0YSwgdXNlcklkLCBjYXJkVGVtcGxhdGUsIGhhbmRsZUNhcmRDbGljaywgaGFuZGxlQmluQ2xpY2ssIGhhbmRsZUxpa2VDbGljayB9KSB7XG4gICAgdGhpcy5fbmFtZSA9IGNhcmREYXRhLm5hbWU7XG4gICAgdGhpcy5fbGluayA9IGNhcmREYXRhLmxpbms7XG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xuICAgIHRoaXMuX2NhcmRUZW1wbGF0ZSA9IGNhcmRUZW1wbGF0ZTtcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19pbWcnKTtcbiAgICB0aGlzLl9jYXJkVGl0bGUgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX190aXRsZScpO1xuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19saWtlLWJ0bicpO1xuICAgIHRoaXMuX2xpa2VzQW1vdW50ID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fbGlrZXMtYW1vdW50Jyk7XG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fZGVsZXRlLWJ0bicpO1xuICAgIHRoaXMuX2hhbmRsZUJpbkNsaWNrID0gaGFuZGxlQmluQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlTGlrZUNsaWNrID0gaGFuZGxlTGlrZUNsaWNrO1xuICAgIHRoaXMuX21pbmVDYXJkID0gY2FyZERhdGEuaXNNaW5lO1xuICAgIHRoaXMuX215TmV3Q2FyZCA9IGNhcmREYXRhLm15TmV3Q2FyZDtcbiAgICB0aGlzLl9jYXJkTGlrZXMgPSBjYXJkRGF0YS5saWtlcztcbiAgICB0aGlzLl9pbml0aWFsTGlrZXMgPSBjYXJkRGF0YS5saWtlcy5sZW5ndGg7XG4gICAgdGhpcy5fdXNlcklkID0gdXNlcklkO1xuICB9XG5cbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRUZW1wbGF0ZSlcbiAgICAgIC5jb250ZW50XG4gICAgICAucXVlcnlTZWxlY3RvcignLmNhcmQnKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcblxuICAgIHJldHVybiBjYXJkRWxlbWVudDtcbiAgfVxuXG4gIGNyZWF0ZUNhcmQoKSB7XG4gICAgdGhpcy5fY2FyZFRpdGxlLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9jYXJkSW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX2hhbmRsZUxpa2VJbml0QW1vdW50KCk7XG4gICAgdGhpcy5fYWRkRGVsZXRlQnV0dG9uKCk7XG4gICAgdGhpcy5fY2hlY2tMaWtlcygpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2hhbmRsZUxpa2VDbGljayk7XG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5faGFuZGxlQmluQ2xpY2spO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCB0aGlzLl9oYW5kbGVDYXJkQ2xpY2spO1xuICB9XG5cbiAgX3VwZGF0ZUxpa2VzKGxpa2VzKSB7XG4gICAgdGhpcy5fbGlrZXNBbW91bnQudGV4dENvbnRlbnQgPSBsaWtlcy5sZW5ndGg7XG4gICAgdGhpcy5fY2FyZExpa2VzID0gbGlrZXM7XG4gIH1cblxuICBhZGRMaWtlKGxpa2VzKSB7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdjYXJkX19saWtlLWJ0bl9hY3RpdmUnKTtcbiAgICB0aGlzLl91cGRhdGVMaWtlcyhsaWtlcyk7XG4gIH1cblxuICByZW1vdmVMaWtlKGxpa2VzKSB7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCdjYXJkX19saWtlLWJ0bl9hY3RpdmUnKTtcbiAgICB0aGlzLl91cGRhdGVMaWtlcyhsaWtlcyk7XG4gIH1cblxuICBpc0xpa2VkKCkge1xuICAgIGNvbnN0IGlzTXlMaWtlID0gdGhpcy5fY2FyZExpa2VzLnNvbWUobGlrZSA9PiBsaWtlLl9pZCA9PT0gdGhpcy5fdXNlcklkKTtcbiAgICByZXR1cm4gaXNNeUxpa2U7XG4gIH1cblxuICBfaGFuZGxlTGlrZUluaXRBbW91bnQoKSB7XG4gICAgdGhpcy5fbGlrZXNBbW91bnQudGV4dENvbnRlbnQgPSB0aGlzLl9pbml0aWFsTGlrZXM7XG4gIH1cblxuICBfYWRkRGVsZXRlQnV0dG9uKCkge1xuICAgIGlmICh0aGlzLl9taW5lQ2FyZCB8fCB0aGlzLl9teU5ld0NhcmQpIHtcbiAgICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdjYXJkX19kZWxldGUtYnRuX2FjdGl2ZScpO1xuICAgIH1cbiAgfVxuXG4gIGhhbmRsZURlbGV0ZUJ1dHRvbiA9ICgpID0+IHtcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xuICB9XG5cbiAgX2NoZWNrTGlrZXMoKSB7XG4gICAgdGhpcy5fY2FyZExpa2VzLmZvckVhY2goKGxpa2UpID0+IHtcbiAgICAgIGlmIChsaWtlLl9pZCA9PT0gdGhpcy5fdXNlcklkKSB7XG4gICAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZCgnY2FyZF9fbGlrZS1idG5fYWN0aXZlJyk7XG4gICAgICB9O1xuICAgIH0pXG4gIH1cbn0iLCJpbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xuaW1wb3J0IGhlYWRlckxvZ29TcmMgZnJvbSBcIi4uL2ltYWdlcy9sb2dvLnN2Z1wiO1xuXG5jb25zdCBoZWFkZXJMb2dvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJoZWFkZXItbG9nb1wiKTtcbmhlYWRlckxvZ28uc3JjID0gaGVhZGVyTG9nb1NyYztcblxuaW1wb3J0IHtcbiAgcHJvZmlsZU5hbWUsXG4gIHByb2ZpbGVJbmZvLFxuICBlZGl0QnV0dG9uLFxuICBhZGRCdXR0b24sXG4gIHBvcHVwRWRpdCxcbiAgcG9wdXBBZGQsXG4gIHBvcHVwQ2FyZCxcbiAgcG9wdXBFZGl0Rm9ybSxcbiAgZmllbGROYW1lLFxuICBmaWVsZEFib3V0TWUsXG4gIHBvcHVwQWRkRm9ybSxcbiAgY2FyZHNMaXN0LFxuICB2YWxpZGF0aW9uQ29uZmlnLFxuICBwb3B1cERlbGV0ZSxcbiAgcG9wdXBEZWxldGVZZXNCdXR0b24sXG4gIHBob3RvQ29udGFpbmVyLFxuICBwb3B1cEVkaXRBdmF0YXIsXG4gIGVkaXRBdmF0YXJCdG4sXG4gIHBvcHVwRWRpdEF2YUZvcm0sXG59IGZyb20gJy4uL3NjcmlwdHMvdXRpbHMvY29uc3RhbnRzLmpzJztcblxuY29uc3QgdXNlckRhdGFGaWVsZHMgPSB7fTtcbnVzZXJEYXRhRmllbGRzLm5hbWUgPSBwcm9maWxlTmFtZTtcbnVzZXJEYXRhRmllbGRzLmluZm8gPSBwcm9maWxlSW5mbztcbnVzZXJEYXRhRmllbGRzLmF2YXRhciA9IHBob3RvQ29udGFpbmVyO1xudXNlckRhdGFGaWVsZHMucG9wdXBGaWVsZE5hbWUgPSBmaWVsZE5hbWU7XG51c2VyRGF0YUZpZWxkcy5wb3B1cEZpZWxkSW5mbyA9IGZpZWxkQWJvdXRNZTtcblxuaW1wb3J0IHsgRm9ybVZhbGlkYXRvciB9IGZyb20gJy4uL3NjcmlwdHMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzJztcbmltcG9ydCB7IFBvcHVwV2l0aEltYWdlIH0gZnJvbSAnLi4vc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlcy5qcyc7XG5pbXBvcnQgeyBQb3B1cFdpdGhGb3JtIH0gZnJvbSAnLi4vc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMnO1xuaW1wb3J0IHsgQ29uZmlybWF0aW9uUG9wdXAgfSBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL0NvbmZpcm1hdGlvblBvcHVwLmpzXCI7XG5pbXBvcnQgeyBVc2VySW5mbyB9IGZyb20gJy4uL3NjcmlwdHMvY29tcG9uZW50cy9Vc2VySW5mby5qcyc7XG5pbXBvcnQgeyBDYXJkIH0gZnJvbSAnLi4vc2NyaXB0cy9jb21wb25lbnRzL0NhcmQuanMnO1xuaW1wb3J0IHsgU2VjdGlvbiB9IGZyb20gXCIuLi9zY3JpcHRzL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xuaW1wb3J0IHsgQXBpIH0gZnJvbSBcIi4uL3NjcmlwdHMvY29tcG9uZW50cy9BcGkuanNcIjtcblxuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQubm9tb3JlcGFydGllcy5jby92MS9ncm91cC0xMlwiLFxuICBoZWFkZXJzOiB7XG4gICAgYXV0aG9yaXphdGlvbjogXCIyZjkyZTZmOC1kM2JmLTRmMGItYjdjOS1lY2I4NDRhNjVkN2JcIixcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICB9XG59KTtcblxuY29uc3QgZm9ybVZhbGlkYXRvcnMgPSB7fTtcblxuY29uc3QgZW5hYmxlVmFsaWRhdGlvbiA9IChjb25maWcpID0+IHtcbiAgY29uc3QgZm9ybUxpc3QgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY29uZmlnLmZvcm1TZWxlY3RvcikpO1xuICBmb3JtTGlzdC5mb3JFYWNoKChmb3JtRWxlbWVudCkgPT4ge1xuICAgIGNvbnN0IHZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgZm9ybUVsZW1lbnQpO1xuICAgIGNvbnN0IGZvcm1OYW1lID0gZm9ybUVsZW1lbnQuZ2V0QXR0cmlidXRlKCduYW1lJyk7XG5cbiAgICBmb3JtVmFsaWRhdG9yc1tmb3JtTmFtZV0gPSB2YWxpZGF0b3I7XG4gICAgdmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbiAgfSk7XG59O1xuXG5lbmFibGVWYWxpZGF0aW9uKHZhbGlkYXRpb25Db25maWcpO1xuXG5jb25zdCBwb3B1cENhcmRSZW5kZXJlciA9IG5ldyBQb3B1cFdpdGhJbWFnZShwb3B1cENhcmQpO1xucG9wdXBDYXJkUmVuZGVyZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuY29uc3QgcG9wdXBEZWxldGVSZW5kZXJlciA9IG5ldyBDb25maXJtYXRpb25Qb3B1cChwb3B1cERlbGV0ZSk7XG5wb3B1cERlbGV0ZVJlbmRlcmVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cblxuZnVuY3Rpb24gY3JlYXRlQ2FyZChpdGVtLCB1c2VySWQpIHtcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKHtcbiAgICBjYXJkRGF0YTogaXRlbSxcbiAgICB1c2VySWQ6IHVzZXJJZCxcbiAgICBjYXJkVGVtcGxhdGU6ICcjY2FyZC10ZW1wbGF0ZScsXG4gICAgaGFuZGxlQ2FyZENsaWNrOiAoKSA9PiB7XG4gICAgICBwb3B1cENhcmRSZW5kZXJlci5vcGVuKGl0ZW0pO1xuICAgIH0sXG4gICAgaGFuZGxlQmluQ2xpY2s6ICgpID0+IHtcbiAgICAgIHBvcHVwRGVsZXRlUmVuZGVyZXIub3BlbigpO1xuXG4gICAgICBjb25zdCBvbkRlbGV0ZSA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIGFwaS5kZWxldGUoaXRlbS5faWQpXG4gICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgY2FyZC5oYW5kbGVEZWxldGVCdXR0b24oKTtcbiAgICAgICAgICAgIHBvcHVwRGVsZXRlUmVuZGVyZXIuY2xvc2UoKTtcbiAgICAgICAgICAgIHBvcHVwRGVsZXRlWWVzQnV0dG9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgb25EZWxldGUpXG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcG9wdXBEZWxldGVZZXNCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvbkRlbGV0ZSlcbiAgICB9LFxuICAgIGhhbmRsZUxpa2VDbGljazogKCkgPT4ge1xuICAgICAgY29uc3QgaXNNeUxpa2UgPSBjYXJkLmlzTGlrZWQoKTtcbiAgICAgIGlmIChpc015TGlrZSkge1xuICAgICAgICBhcGkucmVtb3ZlTGlrZShpdGVtLl9pZClcbiAgICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgICBjYXJkLnJlbW92ZUxpa2UocmVzLmxpa2VzKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYXBpLmFkZExpa2UoaXRlbS5faWQpXG4gICAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgICAgY2FyZC5hZGRMaWtlKHJlcy5saWtlcyk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuXG4gIH0pO1xuXG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZC5jcmVhdGVDYXJkKCk7XG4gIHJldHVybiBjYXJkRWxlbWVudFxufVxuXG5jb25zdCBjYXJkUmVuZGVyZXIgPSBuZXcgU2VjdGlvbih7XG4gIHJlbmRlcmVyOiAoaXRlbSwgdXNlcklkKSA9PiB7XG4gICAgaWYgKGl0ZW0ubXlOZXdDYXJkKSB7XG4gICAgICBjb25zdCBjYXJkRWxlbWVudCA9IGNyZWF0ZUNhcmQoaXRlbSwgdXNlcklkKTtcbiAgICAgIGNhcmRSZW5kZXJlci5hZGRQcmVwZW5kSXRlbShjYXJkRWxlbWVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY3JlYXRlQ2FyZChpdGVtLCB1c2VySWQpO1xuICAgICAgY2FyZFJlbmRlcmVyLmFkZEFwcGVuZEl0ZW0oY2FyZEVsZW1lbnQpO1xuICAgIH1cbiAgfVxufSwgY2FyZHNMaXN0KTtcblxuXG5jb25zdCBwb3B1cEVkaXRBdmF0YXJSZW5kZXJlciA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcbiAgc29tZVBvcHVwOiBwb3B1cEVkaXRBdmF0YXIsXG4gIGNhbGxCYWNrOiAoKSA9PiB7XG4gICAgcG9wdXBFZGl0QXZhdGFyUmVuZGVyZXIucmVuZGVyTG9hZGluZyh0cnVlLCAnU2F2aW5nLi4uJyk7XG4gICAgY29uc3QgZmllbGRWYWx1ZSA9IHBvcHVwRWRpdEF2YXRhclJlbmRlcmVyLmdldElucHV0VmFsdWVzKCk7XG5cbiAgICBhcGkucGF0Y2hBdmF0YXIoZmllbGRWYWx1ZSlcbiAgICAgIC50aGVuKChwcm9maWxlKSA9PiB7XG4gICAgICAgIHBob3RvQ29udGFpbmVyLnNyYyA9IHByb2ZpbGUuYXZhdGFyO1xuICAgICAgICBwb3B1cEVkaXRBdmF0YXJSZW5kZXJlci5jbG9zZSgpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICB9KVxuICAgICAgLmZpbmFsbHkoZnVuY3Rpb24gKCkge1xuICAgICAgICBwb3B1cEVkaXRBdmF0YXJSZW5kZXJlci5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcbiAgICAgIH0pO1xuICB9XG59KTtcbnBvcHVwRWRpdEF2YXRhclJlbmRlcmVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cblxuXG5jb25zdCBlZGl0UG9wdXBCZWhhdmlvciA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcbiAgc29tZVBvcHVwOiBwb3B1cEVkaXQsXG4gIGNhbGxCYWNrOiAoKSA9PiB7XG4gICAgZWRpdFBvcHVwQmVoYXZpb3IucmVuZGVyTG9hZGluZyh0cnVlLCAnU2F2aW5nLi4uJyk7XG5cbiAgICBjb25zdCBlZGl0RmllbGRzID0gZWRpdFBvcHVwQmVoYXZpb3IuZ2V0SW5wdXRWYWx1ZXMoKTtcblxuICAgIGFwaS5wYXRjaFByb2ZpbGVEYXRhKGVkaXRGaWVsZHMpXG4gICAgICAudGhlbigodXNlcikgPT4ge1xuICAgICAgICB1c2VyRGF0YUZpZWxkcy5uYW1lLnRleHRDb250ZW50ID0gdXNlci5uYW1lO1xuICAgICAgICB1c2VyRGF0YUZpZWxkcy5pbmZvLnRleHRDb250ZW50ID0gdXNlci5hYm91dDtcbiAgICAgICAgZWRpdFBvcHVwQmVoYXZpb3IuY2xvc2UoKTtcbiAgICAgICAgdXNlckRhdGFGaWVsZHMucG9wdXBGaWVsZE5hbWUudmFsdWUgPSB1c2VyLm5hbWU7XG4gICAgICAgIHVzZXJEYXRhRmllbGRzLnBvcHVwRmllbGRJbmZvLnZhbHVlID0gdXNlci5hYm91dDtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgfSlcbiAgICAgIC5maW5hbGx5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZWRpdFBvcHVwQmVoYXZpb3IucmVuZGVyTG9hZGluZyhmYWxzZSk7XG4gICAgICB9KTtcblxuICB9XG5cbn0pO1xuZWRpdFBvcHVwQmVoYXZpb3Iuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuY29uc3QgYWRkUG9wdXBCZWhhdmlvciA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcbiAgc29tZVBvcHVwOiBwb3B1cEFkZCxcbiAgY2FsbEJhY2s6ICgpID0+IHtcbiAgICBhZGRQb3B1cEJlaGF2aW9yLnJlbmRlckxvYWRpbmcodHJ1ZSwgJ0NyZWF0aW5nLi4uJyk7XG5cbiAgICBjb25zdCBhZGRGaWVsZHMgPSBhZGRQb3B1cEJlaGF2aW9yLmdldElucHV0VmFsdWVzKCk7XG4gICAgY29uc3QgbmV3Q2FyZCA9IHt9O1xuICAgIG5ld0NhcmQubmFtZSA9IGFkZEZpZWxkcy5wbGFjZVRpdGxlO1xuICAgIG5ld0NhcmQubGluayA9IGFkZEZpZWxkcy5wbGFjZUxpbms7XG5cbiAgICBhcGkucG9zdE5ld0NhcmREYXRhKG5ld0NhcmQpXG4gICAgICAudGhlbigoY2FyZCkgPT4ge1xuICAgICAgICBjYXJkLm15TmV3Q2FyZCA9IHRydWU7XG5cbiAgICAgICAgY2FyZFJlbmRlcmVyLnJlbmRlcmVyKGNhcmQsIGNhcmQub3duZXIuX2lkKTtcbiAgICAgICAgYWRkUG9wdXBCZWhhdmlvci5jbG9zZSgpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICB9KVxuICAgICAgLmZpbmFsbHkoZnVuY3Rpb24gKCkge1xuICAgICAgICBhZGRQb3B1cEJlaGF2aW9yLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xuICAgICAgfSk7XG4gIH1cbn0pO1xuYWRkUG9wdXBCZWhhdmlvci5zZXRFdmVudExpc3RlbmVycygpO1xuXG5hZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIGZvcm1WYWxpZGF0b3JzW3BvcHVwQWRkRm9ybS5nZXRBdHRyaWJ1dGUoJ25hbWUnKV0ucmVzZXRWYWxpZGF0aW9uKCk7XG5cbiAgYWRkUG9wdXBCZWhhdmlvci5vcGVuKCk7XG59KTtcblxuZWRpdEF2YXRhckJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgZm9ybVZhbGlkYXRvcnNbcG9wdXBFZGl0QXZhRm9ybS5nZXRBdHRyaWJ1dGUoJ25hbWUnKV0ucmVzZXRWYWxpZGF0aW9uKCk7XG5cbiAgcG9wdXBFZGl0QXZhdGFyUmVuZGVyZXIub3BlbigpO1xufSk7XG5cbmVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIGZvcm1WYWxpZGF0b3JzW3BvcHVwRWRpdEZvcm0uZ2V0QXR0cmlidXRlKCduYW1lJyldLnJlc2V0VmFsaWRhdGlvbigpO1xuXG4gIHVzZXJEYXRhRmllbGRzLnBvcHVwRmllbGROYW1lLnZhbHVlID0gdXNlckRhdGFGaWVsZHMubmFtZS50ZXh0Q29udGVudDtcbiAgdXNlckRhdGFGaWVsZHMucG9wdXBGaWVsZEluZm8udmFsdWUgPSB1c2VyRGF0YUZpZWxkcy5pbmZvLnRleHRDb250ZW50O1xuICBlZGl0UG9wdXBCZWhhdmlvci5vcGVuKCk7XG59KTtcblxuY29uc3QgaW5pdEFwcCA9IGFzeW5jICgpID0+IHtcbiAgY29uc3QgdXNlciA9IGF3YWl0IGFwaS5nZXRNeVByb2ZpbGUoKTtcblxuICBjb25zdCB1c2VySW5mb1JlbmRlcmVyID0gbmV3IFVzZXJJbmZvKHVzZXIsIHVzZXJEYXRhRmllbGRzKTtcbiAgdXNlckluZm9SZW5kZXJlci5zZXRVc2VySW5mbygpO1xuXG4gIGNvbnN0IGNhcmRzID0gYXdhaXQgYXBpLmdldEluaXRpYWxDYXJkcygpO1xuXG4gIGNhcmRzLmZvckVhY2goKGNhcmQpID0+IHtcbiAgICBpZiAoY2FyZC5vd25lci5faWQgPT09IHVzZXIuX2lkKSB7XG4gICAgICBjYXJkLmlzTWluZSA9IHRydWU7XG4gICAgfVxuICAgIGNhcmRSZW5kZXJlci5yZW5kZXJlcihjYXJkLCB1c2VyLl9pZClcbiAgfSk7XG59O1xuXG5pbml0QXBwKCk7IiwiZXhwb3J0IGNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKGZldGNoRGF0YSkge1xuICAgIHRoaXMuX2Jhc2VVcmwgPSBmZXRjaERhdGEuYmFzZVVybDtcbiAgICB0aGlzLl9oZWFkZXJzID0gZmV0Y2hEYXRhLmhlYWRlcnM7XG4gIH1cblxuICBfY2hlY2tSZXNwb25zZShyZXMpIHtcbiAgICBpZiAocmVzLm9rKSB7XG4gICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICB9XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICB9XG5cbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcbiAgICB9KVxuICAgICAgLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gIH1cblxuICBnZXRNeVByb2ZpbGUoKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xuICAgIH0pXG4gICAgICAudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgfVxuXG4gIGRlbGV0ZShjYXJkSWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9YCwge1xuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcbiAgICB9KVxuICAgICAgLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gIH1cblxuICBwb3N0TmV3Q2FyZERhdGEoY2FyZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogY2FyZC5uYW1lLFxuICAgICAgICBsaW5rOiBjYXJkLmxpbmtcbiAgICAgIH0pXG4gICAgfSlcbiAgICAgIC50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xuICB9XG5cbiAgcGF0Y2hQcm9maWxlRGF0YShlZGl0RmllbGRzKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogZWRpdEZpZWxkcy5wcm9maWxlTmFtZSxcbiAgICAgICAgYWJvdXQ6IGVkaXRGaWVsZHMucHJvZmlsZUFib3V0XG4gICAgICB9KVxuICAgIH0pXG4gICAgICAudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgfVxuXG4gIHBhdGNoQXZhdGFyKGZpZWxkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGF2YXRhcjogZmllbGQuYXZhdGFyTGluayxcbiAgICAgIH0pXG4gICAgfSlcbiAgICAgIC50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xuICB9XG5cbiAgcmVtb3ZlTGlrZShpdGVtSWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtpdGVtSWR9YCwge1xuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcbiAgICB9KVxuICAgICAgLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gIH1cblxuICBhZGRMaWtlKGl0ZW1JZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy9saWtlcy8ke2l0ZW1JZH1gLCB7XG4gICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xuICAgIH0pXG4gICAgICAudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgfVxufSIsImltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihzb21lUG9wdXApIHtcbiAgICBzdXBlcihzb21lUG9wdXApO1xuICAgIHRoaXMuX3BvcHVwQ2FyZEltYWdlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19jYXJkLWltZycpO1xuICAgIHRoaXMuX3BvcHVwQ2FyZFRpdGxlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19jYXJkLXRpdGxlJyk7XG4gIH1cblxuICBvcGVuKGl0ZW0pIHtcbiAgICB0aGlzLl9wb3B1cENhcmRJbWFnZS5zcmMgPSBpdGVtLmxpbms7XG4gICAgdGhpcy5fcG9wdXBDYXJkSW1hZ2UuYWx0ID0gaXRlbS5uYW1lO1xuICAgIHRoaXMuX3BvcHVwQ2FyZFRpdGxlLnRleHRDb250ZW50ID0gaXRlbS5uYW1lO1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgfTtcbn0iLCJpbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBjbGFzcyBDb25maXJtYXRpb25Qb3B1cCBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3Ioc29tZVBvcHVwKSB7XG4gICAgc3VwZXIoc29tZVBvcHVwKTtcbiAgfVxufSIsImV4cG9ydCBjbGFzcyBTZWN0aW9uIHtcbiAgY29uc3RydWN0b3IoeyByZW5kZXJlciB9LCBjb250YWluZXIpIHtcbiAgICB0aGlzLnJlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgdGhpcy5fY29udGFpbmVyID0gY29udGFpbmVyO1xuICB9XG5cbiAgX2NsZWFyKCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5pbm5lckhUTUwgPSBcIlwiO1xuICB9XG5cbiAgYWRkUHJlcGVuZEl0ZW0oaXRlbSkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGl0ZW0pO1xuICB9XG5cbiAgYWRkQXBwZW5kSXRlbShpdGVtKSB7XG5cbiAgICB0aGlzLl9jb250YWluZXIuYXBwZW5kKGl0ZW0pO1xuXG4gIH1cbn07Il0sIm5hbWVzIjpbIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwicCIsImJvZHkiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJwcm9maWxlIiwicHJvZmlsZU5hbWUiLCJwcm9maWxlSW5mbyIsImVkaXRCdXR0b24iLCJhZGRCdXR0b24iLCJwb3B1cEVkaXQiLCJwb3B1cEFkZCIsInBvcHVwRGVsZXRlIiwicGhvdG9Db250YWluZXIiLCJwb3B1cEVkaXRBdmF0YXIiLCJwb3B1cEVkaXRBdmFGb3JtIiwiZWRpdEF2YXRhckJ0biIsInBvcHVwRGVsZXRlWWVzQnV0dG9uIiwicG9wdXBDYXJkIiwicG9wdXBFZGl0Rm9ybSIsImZpZWxkTmFtZSIsImZpZWxkQWJvdXRNZSIsInBvcHVwQWRkRm9ybSIsImNhcmRzTGlzdCIsIkZvcm1WYWxpZGF0b3IiLCJjb25zdHJ1Y3RvciIsInNlbGVjdG9ycyIsImZvcm1FbGVtZW50IiwidGhpcyIsIl9mb3JtU2VsZWN0b3IiLCJmb3JtU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2Zvcm1FbGVtZW50IiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFNlbGVjdG9yIiwiX2J1dHRvbkVsZW1lbnQiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImVuYWJsZVZhbGlkYXRpb24iLCJhZGRFdmVudExpc3RlbmVyIiwiZXZ0IiwicHJldmVudERlZmF1bHQiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJmb3JFYWNoIiwiaW5wdXRFbGVtZW50IiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsImRpc2FibGVCdXR0b24iLCJjbGFzc0xpc3QiLCJhZGQiLCJzZXRBdHRyaWJ1dGUiLCJpbnB1dExpc3QiLCJidXR0b25FbGVtZW50IiwiX2hhc0ludmFsaWRJbnB1dCIsInJlbW92ZSIsInJlbW92ZUF0dHJpYnV0ZSIsInNvbWUiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hpZGVJbnB1dEVycm9yIiwiX3Nob3dJbnB1dEVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJpZCIsInRleHRDb250ZW50IiwicmVzZXRWYWxpZGF0aW9uIiwiUG9wdXAiLCJzb21lUG9wdXAiLCJrZXkiLCJjbG9zZSIsInRhcmdldCIsImNvbnRhaW5zIiwiX3BvcHVwIiwib3BlbiIsIl9oYW5kbGVFc2NDbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJzZXRFdmVudExpc3RlbmVycyIsIl9oYW5kbGVDbGlja0Nsb3NlIiwiUG9wdXBXaXRoRm9ybSIsImNhbGxCYWNrIiwic3VwZXIiLCJfY2FsbEJhY2siLCJfZmllbGRzIiwiX3BvcHVwRm9ybSIsIl9zYXZlQnRuIiwiX3NhdmVCdXR0b25UZXh0IiwiZ2V0SW5wdXRWYWx1ZXMiLCJmaWVsZHNMaXN0IiwiZmllbGQiLCJuYW1lIiwidmFsdWUiLCJyZW5kZXJMb2FkaW5nIiwiaXNMb2FkaW5nIiwibG9hZGluZ1RleHQiLCJyZXNldCIsIlVzZXJJbmZvIiwidXNlciIsInVzZXJEYXRhRmllbGRzIiwiX3VzZXJOYW1lIiwiX3VzZXJBYm91dCIsImFib3V0IiwiX3VzZXJBdmF0YXIiLCJhdmF0YXIiLCJfZmllbGROYW1lIiwiX2ZpZWxkSW5mbyIsImluZm8iLCJfcGhvdG9Db250YWluZXIiLCJfcG9wdXBGaWVsZE5hbWUiLCJwb3B1cEZpZWxkTmFtZSIsIl9wb3B1cEZpZWxkSW5mbyIsInBvcHVwRmllbGRJbmZvIiwiZ2V0VXNlckluZm8iLCJ1c2VySW5mb0xpc3QiLCJzZXRVc2VySW5mbyIsInNyYyIsIkNhcmQiLCJjYXJkRGF0YSIsInVzZXJJZCIsImNhcmRUZW1wbGF0ZSIsImhhbmRsZUNhcmRDbGljayIsImhhbmRsZUJpbkNsaWNrIiwiaGFuZGxlTGlrZUNsaWNrIiwiX2VsZW1lbnQiLCJfbmFtZSIsIl9saW5rIiwibGluayIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfY2FyZFRlbXBsYXRlIiwiX2dldFRlbXBsYXRlIiwiX2NhcmRJbWFnZSIsIl9jYXJkVGl0bGUiLCJfbGlrZUJ1dHRvbiIsIl9saWtlc0Ftb3VudCIsIl9kZWxldGVCdXR0b24iLCJfaGFuZGxlQmluQ2xpY2siLCJfaGFuZGxlTGlrZUNsaWNrIiwiX21pbmVDYXJkIiwiaXNNaW5lIiwiX215TmV3Q2FyZCIsIm15TmV3Q2FyZCIsIl9jYXJkTGlrZXMiLCJsaWtlcyIsIl9pbml0aWFsTGlrZXMiLCJsZW5ndGgiLCJfdXNlcklkIiwiY29udGVudCIsImNsb25lTm9kZSIsImNyZWF0ZUNhcmQiLCJhbHQiLCJfaGFuZGxlTGlrZUluaXRBbW91bnQiLCJfYWRkRGVsZXRlQnV0dG9uIiwiX2NoZWNrTGlrZXMiLCJfdXBkYXRlTGlrZXMiLCJhZGRMaWtlIiwicmVtb3ZlTGlrZSIsImlzTGlrZWQiLCJsaWtlIiwiX2lkIiwiZ2V0RWxlbWVudEJ5SWQiLCJoZWFkZXJMb2dvU3JjIiwiYXBpIiwiZmV0Y2hEYXRhIiwiX2Jhc2VVcmwiLCJiYXNlVXJsIiwiX2hlYWRlcnMiLCJoZWFkZXJzIiwiX2NoZWNrUmVzcG9uc2UiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiZ2V0SW5pdGlhbENhcmRzIiwiZmV0Y2giLCJ0aGVuIiwiZ2V0TXlQcm9maWxlIiwiZGVsZXRlIiwiY2FyZElkIiwibWV0aG9kIiwicG9zdE5ld0NhcmREYXRhIiwiY2FyZCIsIkpTT04iLCJzdHJpbmdpZnkiLCJwYXRjaFByb2ZpbGVEYXRhIiwiZWRpdEZpZWxkcyIsInByb2ZpbGVBYm91dCIsInBhdGNoQXZhdGFyIiwiYXZhdGFyTGluayIsIml0ZW1JZCIsImF1dGhvcml6YXRpb24iLCJmb3JtVmFsaWRhdG9ycyIsImNvbmZpZyIsInZhbGlkYXRvciIsImZvcm1OYW1lIiwiZ2V0QXR0cmlidXRlIiwicG9wdXBDYXJkUmVuZGVyZXIiLCJfcG9wdXBDYXJkSW1hZ2UiLCJfcG9wdXBDYXJkVGl0bGUiLCJpdGVtIiwicG9wdXBEZWxldGVSZW5kZXJlciIsIm9uRGVsZXRlIiwiaGFuZGxlRGVsZXRlQnV0dG9uIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwiY2FyZFJlbmRlcmVyIiwiY29udGFpbmVyIiwicmVuZGVyZXIiLCJfY29udGFpbmVyIiwiX2NsZWFyIiwiaW5uZXJIVE1MIiwiYWRkUHJlcGVuZEl0ZW0iLCJwcmVwZW5kIiwiYWRkQXBwZW5kSXRlbSIsImFwcGVuZCIsImNhcmRFbGVtZW50IiwicG9wdXBFZGl0QXZhdGFyUmVuZGVyZXIiLCJmaWVsZFZhbHVlIiwiZmluYWxseSIsImVkaXRQb3B1cEJlaGF2aW9yIiwiYWRkUG9wdXBCZWhhdmlvciIsImFkZEZpZWxkcyIsIm5ld0NhcmQiLCJwbGFjZVRpdGxlIiwicGxhY2VMaW5rIiwib3duZXIiLCJhc3luYyIsImluaXRBcHAiXSwic291cmNlUm9vdCI6IiJ9