!function(){"use strict";var e={937:function(e,t,s){e.exports=s.p+"4e8e0a1d604782a0dff8.svg"}},t={};function s(i){var n=t[i];if(void 0!==n)return n.exports;var r=t[i]={exports:{}};return e[i](r,r.exports,s),r.exports}s.p="",function(){var e=s(937);const t=document.querySelector(".page"),i=t.querySelector(".profile"),n=i.querySelector(".profile__name"),r=i.querySelector(".profile__about-me"),o=i.querySelector(".profile__edit-btn"),a=i.querySelector(".profile__add-btn"),l=t.querySelector(".popup_edit"),c=t.querySelector(".popup_add"),d=t.querySelector(".popup_delete"),_=document.querySelector(".profile__photo"),h=document.querySelector(".popup_edit-photo"),p=h.querySelector(".popup__form"),u=document.querySelector(".profile__edit-avatar-btn"),m=document.querySelector(".popup_card"),k=(h.querySelector(".popup__input_field_link"),l.querySelector(".popup__form")),v=l.querySelector(".popup__input_field_name"),f=l.querySelector(".popup__input_field_about-me"),L=c.querySelector(".popup__form"),y=(c.querySelector(".popup__input_field_title"),c.querySelector(".popup__input_field_link"),t.querySelector(".cards__list"));class C{constructor(e,t){this._formSelector=e.formSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(e.inputSelector)),this._buttonElement=this._formElement.querySelector(e.submitButtonSelector)}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}_setEventListeners(){this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._inputList,this._buttonElement)}))}))}disableButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)}_toggleButtonState(e,t){this._hasInvalidInput(e)?this.disableButton():(t.classList.remove(this._inactiveButtonClass),t.removeAttribute("disabled"))}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_showInputError(e,t){const s=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}resetValidation(){this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((e=>{this._hideInputError(e)}))}}function E(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class b{constructor(e){E(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),E(this,"_handleClickClose",(e=>{e.target.classList.contains("popup_opened")&&this.close(),e.target.classList.contains("popup__close-btn")&&this.close()})),this._popup=e}open(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_opened")}close(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_opened")}setEventListeners(){this._popup.addEventListener("mousedown",this._handleClickClose)}}class g extends b{constructor(e){let{somePopup:t,callBack:s}=e;super(t),this._callBack=s,this._fields=this._popup.querySelectorAll(".popup__input"),this._popupForm=this._popup.querySelector(".popup__form"),this._saveBtn=this._popup.querySelector(".popup__save-btn"),this._saveButtonText=this._saveBtn.textContent}getInputValues(){const e={};return this._fields.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._callBack()})),super.setEventListeners()}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._saveBtn.textContent=e?t:this._saveButtonText}close(){super.close(),this._popupForm.reset()}}class S{constructor(e){let{cardData:t,userId:s,cardTemplate:i,handleCardClick:n,handleBinClick:r,handleLikeClick:o}=e;var a,l;l=()=>{this._element.remove()},(a="handleDeleteButton")in this?Object.defineProperty(this,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):this[a]=l,this._name=t.name,this._link=t.link,this._handleCardClick=n,this._cardTemplate=i,this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".card__img"),this._cardTitle=this._element.querySelector(".card__title"),this._likeButton=this._element.querySelector(".card__like-btn"),this._likesAmount=this._element.querySelector(".card__likes-amount"),this._deleteButton=this._element.querySelector(".card__delete-btn"),this._handleBinClick=r,this._handleLikeClick=o,this._mineCard=t.isMine,this._myNewCard=t.myNewCard,this._cardLikes=t.likes,this._initialLikes=t.likes.length,this._userId=s}_getTemplate(){return document.querySelector(this._cardTemplate).content.querySelector(".card").cloneNode(!0)}createCard(){return this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this._handleLikeInitAmount(),this._addDeleteButton(),this._checkLikes(),this._element}_setEventListeners(){this._likeButton.addEventListener("click",this._handleLikeClick),this._deleteButton.addEventListener("click",this._handleBinClick),this._cardImage.addEventListener("mousedown",this._handleCardClick)}_updateLikes(e){this._likesAmount.textContent=e.length,this._cardLikes=e}addLike(e){this._likeButton.classList.add("card__like-btn_active"),this._updateLikes(e)}removeLike(e){this._likeButton.classList.remove("card__like-btn_active"),this._updateLikes(e)}isLiked(){return this._cardLikes.some((e=>e._id===this._userId))}_handleLikeInitAmount(){this._likesAmount.textContent=this._initialLikes}_addDeleteButton(){(this._mineCard||this._myNewCard)&&this._deleteButton.classList.add("card__delete-btn_active")}_checkLikes(){this._cardLikes.forEach((e=>{e._id===this._userId&&this._likeButton.classList.add("card__like-btn_active")}))}}document.getElementById("header-logo").src=e;const I={};I.name=n,I.info=r,I.avatar=_,I.popupFieldName=v,I.popupFieldInfo=f;const B=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._checkResponse)}getMyProfile(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._checkResponse)}delete(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}postNewCardData(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}patchProfileData(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.profileName,about:e.profileAbout})}).then(this._checkResponse)}patchAvatar(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatarLink})}).then(this._checkResponse)}removeLike(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}addLike(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"2f92e6f8-d3bf-4f0b-b7c9-ecb844a65d7b","Content-Type":"application/json"}}),q={};var w;w={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-btn",inactiveButtonClass:"popup__save-btn_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"},Array.from(document.querySelectorAll(w.formSelector)).forEach((e=>{const t=new C(w,e),s=e.getAttribute("name");q[s]=t,t.enableValidation()}));const A=new class extends b{constructor(e){super(e),this._popupCardImage=this._popup.querySelector(".popup__card-img"),this._popupCardTitle=this._popup.querySelector(".popup__card-title")}open(e){this._popupCardImage.src=e.link,this._popupCardImage.alt=e.name,this._popupCardTitle.textContent=e.name,super.open()}}(m);A.setEventListeners();const x=new class extends b{constructor(e){super(e),this._yesBtn=this._popup.querySelector(".popup__save-btn")}close(){super.close(),this._onDelete&&(this.removeEventListeners(this._onDelete),this._onDelete=null)}setEventListeners(e){this._onDelete=e,this._onDelete&&this._yesBtn.addEventListener("click",this._onDelete),super.setEventListeners()}removeEventListeners(){this._yesBtn.removeEventListener("click",this._onDelete)}}(d);x.setEventListeners();const D=new class{constructor(e){this._fieldName=e.name,this._fieldInfo=e.info,this._photoContainer=e.avatar}getUserInfo(){const e={};return e.name=this._fieldName.textContent,e.about=this._fieldInfo.textContent,e}setUserInfo(e){this._userId=e._id,this._photoContainer.src=e.avatar,this._fieldName.textContent=e.name,this._fieldInfo.textContent=e.about}}(I);function T(e,t){const s=new S({cardData:e,userId:t,cardTemplate:"#card-template",handleCardClick:()=>{A.open(e)},handleBinClick:()=>{x.open(),x.setEventListeners((()=>B.delete(e._id).then((()=>{s.handleDeleteButton(),x.close(),x.removeEventListeners()})).catch((e=>{console.log(e)}))))},handleLikeClick:()=>{s.isLiked()?B.removeLike(e._id).then((e=>{s.removeLike(e.likes)})).catch((e=>{console.log(e)})):B.addLike(e._id).then((e=>{s.addLike(e.likes)})).catch((e=>{console.log(e)}))}});return s.createCard()}const U=new class{constructor(e,t){let{renderer:s}=e;this.renderer=s,this._container=t}_clear(){this._container.innerHTML=""}addPrependItem(e){this._container.prepend(e)}addAppendItem(e){this._container.append(e)}}({renderer:(e,t)=>{if(e.myNewCard){const s=T(e,t);U.addPrependItem(s)}else{const s=T(e,t);U.addAppendItem(s)}}},y),N=new g({somePopup:h,callBack:()=>{N.renderLoading(!0);const e=N.getInputValues();B.patchAvatar(e).then((e=>{D.setUserInfo(e),N.close()})).catch((e=>{console.log(e)})).finally((function(){N.renderLoading(!1)}))}});N.setEventListeners();const P=new g({somePopup:l,callBack:()=>{P.renderLoading(!0);const e=P.getInputValues();B.patchProfileData(e).then((e=>{D.setUserInfo(e),P.close()})).catch((e=>{console.log(e)})).finally((function(){P.renderLoading(!1)}))}});P.setEventListeners();const V=new g({somePopup:c,callBack:()=>{V.renderLoading(!0,"Creating...");const e=V.getInputValues(),t={};t.name=e.placeTitle,t.link=e.placeLink,B.postNewCardData(t).then((e=>{e.myNewCard=!0,U.renderer(e,e.owner._id),V.close()})).catch((e=>{console.log(e)})).finally((function(){V.renderLoading(!1)}))}});V.setEventListeners(),a.addEventListener("click",(()=>{q[L.getAttribute("name")].resetValidation(),V.open()})),u.addEventListener("click",(()=>{q[p.getAttribute("name")].resetValidation(),N.open()})),o.addEventListener("click",(()=>{q[k.getAttribute("name")].resetValidation();const e=D.getUserInfo();I.popupFieldName.value=e.name,I.popupFieldInfo.value=e.about,P.open()})),(async()=>{const e=await B.getMyProfile();D.setUserInfo(e),(await B.getInitialCards()).forEach((t=>{t.owner._id===e._id&&(t.isMine=!0),U.renderer(t,e._id)}))})()}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,